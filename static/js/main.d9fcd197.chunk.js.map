{"version":3,"sources":["Commit.js","App.js","reportWebVitals.js","index.js"],"names":["Commit","commits","dates","today","Date","getFullYear","getMonth","getDate","first_date","length","earliest","getTime","getTimezoneOffset","longest","Math","ceil","i","now","console","log","flag","streak","current_streak","longgest_streak","className","Object","entries","map","item","index","App","state","isLoading","getcommits","a","page","mycommits","prelength","axios","get","data","forEach","element","push","commit","committer","date","setState","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAoEeA,MAjEf,YAQI,IARuB,IAAVC,EAAS,EAATA,QAETC,EAAQ,GACNC,EAAQ,IAAIC,MAAK,IAAIA,MAAOC,eAAe,IAAID,MAAOE,YAAY,IAAIF,MAAOG,UAAW,EAAG,EAAG,EAAG,GACjGC,EAAa,IAAIJ,KAAKH,EAAQA,EAAQQ,OAAO,IAC7CC,EAAWF,EAAWG,UAA2C,GAA/BH,EAAWI,oBAAuB,IACtEC,EAAUC,KAAKC,MAAMZ,EAAMQ,UAAYD,GAAnB,OAEhBM,EAAE,EAAGA,GAAGH,EAASG,IACrBd,EAAMc,GAAK,EAGf,IAAIA,EAAE,EAAGA,EAAEf,EAAQQ,OAAQO,IAAI,CAC3B,IAAMC,EAAM,IAAIb,KAAKH,EAAQe,IAE7Bd,EADUY,KAAKC,MAAMZ,EAAMQ,UAAYM,EAAIN,WAAvB,UAIxBO,QAAQC,IAAI,IAAIf,KAAK,IAAIA,KAAKH,EAAQ,IAAIU,YAC1CO,QAAQC,IAAIL,KAAKC,MAAM,IAAIX,KAAKH,EAAQ,IAAIU,UAAYR,EAAMQ,WAAxC,QACtBO,QAAQC,IAAIjB,GAEZ,IAAIkB,GAAO,EACPC,EAAS,EACTC,EAAiB,EACjBC,EAAkB,EAEtB,IAAIP,EAAE,EAAGA,EAAEf,EAAQQ,OAAQO,IACpBd,EAAMc,GAAK,EAAGK,KAETD,EAMGG,EAAkBF,IAAQE,EAAkBF,IAL/CC,EAAiBD,EACjBD,GAAO,EACPG,EAAkBF,GAKtBA,EAAS,GAIjB,OAEA,sBAAKG,UAAU,SAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,sDAAyBF,OAE7B,qBAAKE,UAAU,kBAAf,SACI,uDAA0BD,OAE9B,mDACA,qBAAKC,UAAU,eAAf,SACKC,OAAOC,QAAQxB,GAAOyB,KAAI,SAACC,EAAMC,GAC9B,OAAQ,6BAAiBD,EAAK,IAAbC,YCDlBC,E,4MAlDbC,MAAQ,CACNC,WAAW,EACX/B,QAAS,I,EAsBXgC,W,sBAAa,gCAAAC,EAAA,sDAEPC,EAAO,EACPC,EAAY,GACZC,EAAY,EAJL,cAMTA,EAAYD,EAAU3B,OANb,SAOa6B,IAAMC,IAC1B,mEAAmEJ,GAR5D,cAWDK,KAAKC,SAAQ,SAACC,EAASb,GAC7BO,EAAUO,KAAKD,EAAQE,OAAOC,UAAUC,SAE1CX,GAAc,EAdL,UAeJE,IAAcD,EAAU3B,OAfpB,wBAiBX,EAAKsC,SAAS,CAAC9C,QAAQmC,EAAWJ,WAAU,IAjBjC,4C,4CAnBb,WACE,MAA+BgB,KAAKjB,MAA5BC,EAAR,EAAQA,UAAW/B,EAAnB,EAAmBA,QAEnB,OACE,yBAASuB,UAAU,YAAnB,SACCQ,EACG,qBAAKR,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGJ,qBAAKA,UAAU,UAAf,SACE,cAAC,EAAD,CACEvB,QAASA,U,+BA2BnB,WACE+C,KAAKf,iB,GA/CSgB,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d9fcd197.chunk.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nfunction Commit({commits}){\n\n    let dates = {};\n    const today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(), 0, 0, 0, 0);\n    const first_date = new Date(commits[commits.length-1]);\n    const earliest = first_date.getTime() + first_date.getTimezoneOffset()*60*1000;\n    var longest = Math.ceil((today.getTime() - earliest)/(1000*60*60*24))\n\n    for(var i=0; i<=longest; i++){\n        dates[i] = 0;\n    }\n\n    for(i=0; i<commits.length; i++){\n        const now = new Date(commits[i])\n        var idx = Math.ceil((today.getTime() - now.getTime())/(1000*60*60*24))\n        dates[idx]++;\n    }\n\n    console.log(new Date(new Date(commits[0]).getTime()))\n    console.log(Math.ceil((new Date(commits[0]).getTime() - today.getTime())/(1000*60*60*24)))\n    console.log(dates)\n\n    var flag = false;\n    var streak = 0;\n    var current_streak = 0;\n    var longgest_streak = 0;\n\n    for(i=0; i<commits.length; i++){\n        if(dates[i] > 0) streak++;\n        else{\n            if(!flag){\n                current_streak = streak;\n                flag = true;\n                longgest_streak = streak;\n            }\n            else{\n                if(longgest_streak < streak) longgest_streak = streak;\n            }\n            streak = 0;\n        }\n    }\n\n    return (\n    \n    <div className=\"commit\">\n        <div className=\"current_streak\">\n            <h2>My current streak : {current_streak}</h2>\n        </div>\n        <div className=\"longgest_streak\">\n            <h2>My longgest streak : {longgest_streak}</h2>\n        </div>\n        <h3>My recent commits</h3>\n        <div className=\"commit__data\">\n            {Object.entries(dates).map((item, index)=>{\n                return (<h3 key={index}>{item[1]}</h3>);\n            })}\n        </div>\n    </div>\n    );\n}\n\nCommit.propTypes ={\n    commits : PropTypes.array.isRequired,\n}\n\nexport default Commit;","import React from \"react\";\nimport axios from \"axios\";\nimport Commit from './Commit';\n\nclass App extends React.Component{\n\n  state = {\n    isLoading: true,\n    commits: []\n  };\n  \n  render(){\n    const { isLoading, commits } = this.state;\n    \n    return (\n      <section className=\"container\">\n      {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n      ) : (\n        <div className=\"commits\">\n          <Commit\n            commits={commits}\n          />\n        </div>)}\n      </section>\n    );\n  }\n\n  getcommits = async() => {\n\n    let page = 1;\n    let mycommits = [];\n    let prelength = 0;\n    do{\n      prelength = mycommits.length;\n      const commits = await axios.get(\n        \"https://api.github.com/repos/b-chae/AlgorithmStudy/commits?page=\"+page\n      );\n      \n      commits.data.forEach((element, index) => {\n        mycommits.push(element.commit.committer.date);\n      });\n      page = page + 1;\n    }while(prelength !== mycommits.length);\n\n    this.setState({commits:mycommits, isLoading:false});\n  };\n\n  componentDidMount(){\n    this.getcommits()\n  }\n  /* setState 를 부를 때마다 새롭게 render를 하는 것이다. */\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}