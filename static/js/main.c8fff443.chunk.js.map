{"version":3,"sources":["Commit.js","App.js","reportWebVitals.js","index.js"],"names":["Commit","commits","dates","last_week","today","Date","getFullYear","getMonth","getDate","first_date","length","earliest","getTime","getTimezoneOffset","longest","Math","ceil","i","now","flag","streak","current_streak","longgest_streak","longgest_day","week1ago","week2ago","week3ago","weekofday","getDay","console","log","thisweekdate","Object","keys","push","longgest_day_end","className","toDateString","map","commit","index","App","state","isLoading","getcommits","a","page","mycommits","prelength","axios","get","data","forEach","element","committer","date","setState","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8fff443.chunk.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nfunction Commit({commits}){\n\n    let dates = {};\n    let last_week = [];\n    const today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(), 0, 0, 0, 0);\n    const first_date = new Date(commits[commits.length-1]);\n    const earliest = first_date.getTime() + first_date.getTimezoneOffset()*60*1000;\n    var longest = Math.ceil((today.getTime() - earliest)/(1000*60*60*24))\n\n    for(var i=0; i<=longest; i++){\n        dates[i] = 0;\n    }\n\n    for(i=0; i<commits.length; i++){\n        const now = new Date(commits[i])\n        var idx = Math.ceil((today.getTime() - now.getTime())/(1000*60*60*24))\n        dates[idx]++;\n    }\n\n    var flag = false;\n    var streak = 0;\n    var current_streak = 0;\n    var longgest_streak = 0;\n    var longgest_day = today;\n\n    for(i=0; i<commits.length; i++){\n        if(dates[i] > 0) streak++;\n        else{\n            if(!flag){\n                current_streak = streak;\n                flag = true;\n                longgest_streak = streak;\n                longgest_day = today.getTime() - (streak-1)*24*60*60*1000;\n            }\n            else{\n                if(longgest_streak < streak){\n                    longgest_streak = streak;\n                    longgest_day = today.getTime() - (streak-1)*24*60*60*1000;\n                }\n            }\n            streak = 0;\n        }\n    }\n\n    var week1ago = 0;\n    var week2ago = 0;\n    var week3ago = 0;\n    const weekofday = today.getDay();\n    console.log(weekofday)\n    const thisweekdate = new Date(today.getTime() - weekofday*24*60*60*1000);\n\n    for(i=0; i<=weekofday && i<Object.keys(dates).length; i++){\n        last_week.push(dates[i])\n        week1ago += dates[i];\n    }\n    for(i=weekofday+1; i<weekofday+8 && i<Object.keys(dates).length; i++){\n        week2ago += dates[i];\n    }\n    for(i=weekofday+8; i<weekofday+15 && i<Object.keys(dates).length; i++){\n        week3ago += dates[i];\n    }\n\n    longgest_day = new Date(longgest_day)\n    const longgest_day_end = new Date(longgest_day.getTime() + (longgest_streak-1)*24*60*60*1000);\n    console.log(longgest_day, longgest_day_end)\n\n    return (\n    \n    <div className=\"commit\">\n        <div className=\"current_streak\">\n            <h2>My current streak : {current_streak}</h2>\n        </div>\n        <div>\n            <h3 className=\"border_round\">Let's keep up with {current_streak + 1} steak ! üî•</h3>\n        </div>\n        <div className=\"longgest_streak\">\n            <h2>My longgest streak : {longgest_streak}</h2>\n            <h3 className=\"date_detail\">{longgest_day.toDateString()} - {longgest_day_end.toDateString()}</h3>\n        </div>\n        <div className=\"compare week\">\n            <h3>This week [{thisweekdate.toDateString()} - Today] : {week1ago}</h3>\n            <h3>Last week [{new Date(thisweekdate.getTime() - 7*24*60*60*1000).toDateString()}- {new Date(thisweekdate.getTime() - 1*24*60*60*1000).toDateString()}] : {week2ago}</h3>\n            <h3>2 weeks ago [{new Date(thisweekdate.getTime() - 14*24*60*60*1000).toDateString()}- {new Date(thisweekdate.getTime() - 8*24*60*60*1000).toDateString()}]: {week3ago}</h3>\n        </div>\n        <h3 className=\"border_round\">My recent commits üìù</h3>\n        <div className=\"history\">\n            {last_week.map((commit, index)=>(\n                <h3 className=\"commit_border\" key={index}>{commit}</h3>\n            ))}\n        </div>\n    </div>\n    );\n}\n\nCommit.propTypes ={\n    commits : PropTypes.array.isRequired,\n}\n\nexport default Commit;","import React from \"react\";\nimport axios from \"axios\";\nimport Commit from './Commit';\n\nclass App extends React.Component{\n\n  state = {\n    isLoading: true,\n    commits: []\n  };\n  \n  render(){\n    const { isLoading, commits } = this.state;\n    \n    return (\n      <section className=\"container\">\n      {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n      ) : (\n        <div className=\"commits\">\n          <Commit\n            commits={commits}\n          />\n        </div>)}\n      </section>\n    );\n  }\n\n  getcommits = async() => {\n\n    let page = 1;\n    let mycommits = [];\n    let prelength = 0;\n    do{\n      prelength = mycommits.length;\n      const commits = await axios.get(\n        \"https://api.github.com/repos/b-chae/AlgorithmStudy/commits?page=\"+page\n      );\n      \n      commits.data.forEach((element, index) => {\n        mycommits.push(element.commit.committer.date);\n      });\n      page = page + 1;\n    }while(prelength !== mycommits.length);\n\n    this.setState({commits:mycommits, isLoading:false});\n  };\n\n  componentDidMount(){\n    this.getcommits()\n  }\n  /* setState Î•º Î∂ÄÎ•º ÎïåÎßàÎã§ ÏÉàÎ°≠Í≤å renderÎ•º ÌïòÎäî Í≤ÉÏù¥Îã§. */\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}