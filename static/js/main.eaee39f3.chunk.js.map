{"version":3,"sources":["Week.js","History.js","Streak.js","Commit.js","App.js","reportWebVitals.js","index.js"],"names":["Week","dates","last_week","weekday","weekofday","Date","getDay","last_week_day","i","Object","keys","length","push","className","map","commit","index","day","History","today","getFullYear","getMonth","getDate","lastweek","thisweekdate","getTime","x","toDateString","Streak","longgest_day","flag","streak","current_streak","longgest_streak","longgest_day_end","Commit","commits","first_date","getTimezoneOffset","longest","Math","ceil","commit_day","Array","fill","App","state","isLoading","isCommitLoading","userId","repoName","handleChangeUserId","e","setState","target","value","handleChangeRepoName","getcommits","a","page","mycommits","prelength","axios","get","data","forEach","element","committer","date","this","id","onChange","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eaee39f3.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction Week({dates}){\n\n    let last_week = [];\n    const weekday = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    const weekofday = new Date().getDay();\n    var last_week_day = []\n    for(var i=0; i<=weekofday && i<Object.keys(dates).length; i++){\n        last_week.push(dates[i])\n        last_week_day.push(weekday[weekofday-i]);\n    }\n\n    return(\n        <section>\n        <h3 className=\"border_round\">My recent commits üìù</h3>\n        <div className=\"history\">\n            {last_week.map((commit, index)=>(\n                <div key={index} className=\"box\">\n                    <h3>{commit}</h3>\n                </div>\n            ))}\n        </div>\n        <div className=\"history\">\n            {last_week_day.map((day, index)=>(\n                <div key={index} className=\"box\">\n                <h3>{day}</h3>\n            </div>\n            ))}\n        </div>\n        </section>\n    );\n\n}\n\nexport default Week;","import React from \"react\"\n\nfunction History({dates}){\n\n    const today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(), 0, 0, 0, 0);\n    var lastweek = [0];\n    const weekofday = today.getDay();\n    const thisweekdate = new Date(today.getTime()- weekofday*24*60*60*1000);\n    const length = Object.keys(dates).length;\n\n    for(var i=0; i<=weekofday && i<length; i++){\n        lastweek[0] += dates[i];\n    }\n\n    for(var x=1; x<3; x++){\n        if(i>=length) break;\n        lastweek.push(0);\n        for(i=weekofday+1+7*(x-1); i<weekofday+1+7*x && i<length; i++){\n            lastweek[x] += dates[i];\n        }\n    }\n\n    return(\n        <section>\n        <div className=\"compare week\">\n            <h3>This week [{thisweekdate.toDateString()} - Today] : {lastweek[0]}</h3>\n            {lastweek.length > 1 ? <h3>Last week [{new Date(thisweekdate.getTime() - 7*24*60*60*1000).toDateString()}- {new Date(thisweekdate.getTime() - 1*24*60*60*1000).toDateString()}] : {lastweek[1]}</h3> : null}\n            {lastweek.length > 2 ? <h3>2 weeks ago [{new Date(thisweekdate.getTime() - 14*24*60*60*1000).toDateString()}- {new Date(thisweekdate.getTime() - 8*24*60*60*1000).toDateString()}]: {lastweek[2]}</h3> : null}\n        </div>\n        </section>\n    );\n\n}\n\nexport default History;","import React from \"react\"\n\nfunction Streak({dates, length}){\n\n    const today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(), 0, 0, 0, 0);\n    var flag = false;\n    var streak = 1;\n    var current_streak = 1;\n    var longgest_streak = 1;\n    var longgest_day;\n\n    for(var i=1; i<length; i++){\n        if(dates[i] > 0) streak++;\n        else{\n            if(!flag){\n                current_streak = streak;\n                flag = true;\n                longgest_streak = streak;\n                longgest_day = today.getTime() - (i-1)*24*60*60*1000;\n                if(dates[0] === 0 && i === 1) longgest_streak = 0;\n            }\n            else{\n                if(longgest_streak < streak){\n                    longgest_streak = streak;\n                    longgest_day = today.getTime() - (i-1)*24*60*60*1000;\n                }\n            }\n            streak = 0;\n        }\n    }\n\n    longgest_day = new Date(longgest_day)\n    var longgest_day_end = new Date(longgest_day.getTime() + (longgest_streak-1)*24*60*60*1000);\n    if(longgest_day_end.getTime() === today.getTime() && dates[0] === 0){\n        longgest_day_end = new Date(longgest_day_end.getTime() - 24*60*60*1000);\n        longgest_streak--;\n    }\n\n    return(\n        <section>\n        <div className=\"current_streak\">\n            {dates[0] > 0 ? \n                <h2>My current streak : {current_streak} ‚úÖ</h2> : \n                <h2>My current streak : {current_streak-1} ü•∫</h2>}\n        </div>\n        <div>\n            {dates[0] > 0 ? \n                <h3 className=\"border_round\">You're done with {current_streak} streak ‚ùóÔ∏è</h3> : \n                <h3 className=\"border_round\">Let's keep up with {current_streak} streak üî•</h3>}\n        </div>\n        {longgest_streak === 0 ? null : \n            <div className=\"longgest_streak\">\n                <h2>My longgest streak : {longgest_streak}</h2>\n                <h3 className=\"date_detail\">{longgest_day.toDateString()} - {longgest_day_end.toDateString()}</h3>\n            </div>}\n        </section>\n    );\n\n}\n\nexport default Streak;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Week from './Week'\nimport History from './History'\nimport Streak from './Streak'\n\nfunction Commit({commits}){\n\n    const today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(), 0, 0, 0, 0);\n    const first_date = new Date(commits[commits.length-1]).getTime() + new Date(commits[commits.length-1]).getTimezoneOffset()*60*1000;\n    const longest = Math.ceil((today.getTime() - first_date)/(1000*60*60*24))\n    const commit_day = new Array(longest+1).fill(0);\n\n    for(var i=0; i<commits.length; i++){\n        var idx = Math.ceil((today.getTime() - new Date(commits[i]).getTime())/(1000*60*60*24))\n        commit_day[idx]++;\n    }\n\n    return (\n    \n    <div className=\"commit\">\n        <Streak dates={commit_day} length={commit_day.length}/>\n        <History dates={commit_day}/>\n        <Week dates={commit_day}/>\n    </div>\n    );\n}\n\nCommit.propTypes ={\n    commits : PropTypes.array.isRequired,\n}\n\nexport default Commit;","import React from \"react\";\nimport axios from \"axios\";\nimport Commit from \"./Commit\";\n\nclass App extends React.Component{\n\n  state = {\n    isLoading: true,\n    isCommitLoading: true,\n    userId: \"\",\n    repoName: \"\",\n    commits: []\n  };\n\n  handleChangeUserId = (e) => {\n    this.setState({\n      userId: e.target.value\n    })\n  }\n\n  handleChangeRepoName = (e) => {\n    this.setState({\n      repoName: e.target.value\n    })\n  }\n  \n  render(){\n    const { isLoading, isCommitLoading, commits } = this.state;\n    \n    return (\n      <section className=\"container\">\n      {isLoading ? (\n          <div className=\"up50\">\n            <form>\n              <h3 className=\"title\">Welcome üéâ</h3>\n              <h3 className=\"question\">üòé Write your github ID or Org name</h3>\n              <input id=\"user_id\" value={this.state.userId} onChange={this.handleChangeUserId}/>\n              <h3 className=\"question\">and your repository name here ‚úçÔ∏è</h3>\n              <input id=\"repo_name\" value={this.state.repoName} onChange={this.handleChangeRepoName}/>\n              <br></br>\n              <button onClick={this.getcommits}>Submit üëçüèª</button>\n            </form>\n          </div>\n      ) : (\n        <div className=\"commits\">\n          {isCommitLoading ? (\n          <div className=\"up50\">\n            <span>Loading...</span>\n          </div>\n      ) : (\n        <div className=\"commits\">\n          <Commit\n            commits={commits}\n          />\n        </div>)}\n        </div>)}\n      </section>\n    );\n  }\n\n  getcommits = async() => {\n    this.setState({isLoading:false});\n    \n    let page = 1;\n    let mycommits = [];\n    let prelength = 0;\n    do{\n      prelength = mycommits.length;\n      const commits = await axios.get(\n        \"https://api.github.com/repos/\" + this.state.userId + \"/\" + this.state.repoName + \"/commits?page=\"+page\n      );\n      \n      commits.data.forEach((element, index) => {\n        mycommits.push(element.commit.committer.date);\n      });\n      page = page + 1;\n    }while(prelength !== mycommits.length);\n\n    this.setState({commits:mycommits, isCommitLoading:false});\n  };\n\n  componentDidMount(){\n    //this.getcommits()\n  }\n  /* setState Î•º Î∂ÄÎ•º ÎïåÎßàÎã§ ÏÉàÎ°≠Í≤å renderÎ•º ÌïòÎäî Í≤ÉÏù¥Îã§. */\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}